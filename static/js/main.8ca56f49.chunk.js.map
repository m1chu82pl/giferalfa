{"version":3,"sources":["components/EventPlace.styled.js","components/EventPlace.js","components/Footer.js","components/GifsLimitButton.js","components/Header.js","components/Searcher.styled.js","components/Searcher.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","ImgWrapper","Image","img","EventPlace","props","gifsData","map","gif","src","images","original","url","alt","id","footer","FooterText","h6","Footer","year","Date","getFullYear","LimitButtonWrapper","LimitButtonText","a","GifsLimitButton","onClick","handleChangeGifsLimit","limit","animateTitle","keyframes","Title","h1","Header","Form","form","Input","input","Button","button","Searcher","type","placeholder","value","inputText","autoFocus","onChange","changeInputValue","ref","searchInput","onKeyPress","e","key","preventDefault","clearInputValue","App","API","useState","setLimit","setUrl","setGifsData","setInputText","useRef","useEffect","searchTimer","setTimeout","fetch","then","response","ok","Error","json","gifs","data","catch","error","console","log","clearTimeout","event","target","current","focus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ca56f49.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nposition: relative;\r\ndisplay: grid;\r\ngrid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));\r\ngrid-template-rows: repeat(auto-fill, minmax(15rem, 1fr));\r\nalign-items: center;\r\ngap: 10px;\r\nmargin: 0 1vw 20vh;\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nflex-basis: 30vw;\r\nmargin: 1vh 0;\r\n`;\r\n\r\nexport const Image = styled.img`\r\nposition: relative;\r\nwidth: 100%;\r\nheight: auto;\r\nborder-radius: 3%;\r\nbox-shadow: 0px 0px 7px 0px rgb(82, 82, 82);\r\ntransition: 0.4s ease-out;\r\nuser-select: none;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n  transform: scale(1.02);\r\n  box-shadow: 0px 0px 13px 0px rgb(95, 95, 95);\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, ImgWrapper, Image } from \"./EventPlace.styled\";\r\n\r\nconst EventPlace = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      {props.gifsData.map((gif) => {\r\n        return (\r\n          <ImgWrapper key={gif.id}>\r\n            <Image src={gif.images.original.url} alt=\"some gif\" />\r\n          </ImgWrapper>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default EventPlace;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.footer`\r\nposition: fixed;\r\nbottom: 0;\r\nwidth: 100%;\r\ntext-align: center;\r\n`;\r\n\r\nconst FooterText = styled.h6`\r\nmargin: 1px;\r\n`;\r\n\r\nconst Footer = () => {\r\n\r\n  const initialDate = new Date();\r\n  const year = initialDate.getFullYear();\r\n\r\n  return ( \r\n    <Wrapper>\r\n      <FooterText>©{year}</FooterText>\r\n      <FooterText>Powered By GIPHY™</FooterText>\r\n      <FooterText>All Rights Reserved</FooterText>\r\n    </Wrapper>\r\n   );\r\n}\r\n \r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LimitButtonWrapper = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  right: 8vw;\r\n  bottom: 8vw;\r\n  background: transparent;\r\n`;\r\n\r\nconst LimitButtonText = styled.a`\r\n  display: inline-block;\r\n  width: 4rem;\r\n  height: 4rem;\r\n  background: #e6fa8072;\r\n  border-radius: 50%;\r\n  line-height: 4rem;\r\n  text-align: center;\r\n  box-shadow: 0px 0px 7px 0px rgb(82, 82, 82);\r\n  cursor: pointer;\r\n  user-select: none;\r\n  transition: 0.4s;\r\n\r\n  &:hover {\r\n    background: #fa8072;\r\n    transform: scale(1.02);\r\n    box-shadow: 0px 0px 13px 0px rgb(95, 95, 95);\r\n  }\r\n`;\r\n\r\nconst GifsLimitButton = (props) => {\r\n  return (\r\n    <LimitButtonWrapper>\r\n      <LimitButtonText onClick={props.handleChangeGifsLimit}>\r\n        ✖{props.limit}\r\n      </LimitButtonText>\r\n    </LimitButtonWrapper>\r\n  );\r\n};\r\n\r\nexport default GifsLimitButton;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst animateTitle = keyframes`\r\n  0% { background: papayawhip; transform: translateY(-100%); }\r\n  60% { background: papayawhip; transform: translateY(0); }\r\n  100% { background: salmon;  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\nposition: relative;\r\npadding: 5px 0;\r\ntext-align: center;\r\nbackground: salmon;\r\nanimation: ${animateTitle} ease-out 1.5s;\r\n`\r\n\r\nconst Header = () => {\r\n  return ( \r\n    <Title>GIFs that keep on givin'</Title>\r\n   );\r\n}\r\n \r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nposition: relative;\r\nmargin: 0 1vw 0;\r\n`;\r\n\r\nexport const Form = styled.form`\r\ntext-align: center;\r\nmargin: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\noutline: 0;\r\n  border-width: 0 0 3px;\r\n  border-color: red;\r\n\r\n  ::placeholder {\r\n    text-align: center;\r\n  }\r\n\r\n  &:focus {\r\n    border-width: 0 0 3px;\r\n  border-color: salmon;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\nmargin: 0 10px;\r\npadding: 0 5px;\r\nborder: none;\r\ncursor: pointer;\r\n`;\r\n","import { Wrapper, Form, Input, Button } from \"./Searcher.styled\";\r\n\r\nconst Searcher = (props) => {  \r\n\r\n  return ( \r\n    <Wrapper>\r\n      <Form>\r\n        <Input type=\"text\" placeholder=\"what are you looking for?\" value={props.inputText}\r\n        autoFocus\r\n        onChange={props.changeInputValue}\r\n        ref={props.searchInput}\r\n        onKeyPress={e => {\r\n          if (e.key === 'Enter') e.preventDefault();\r\n        }}\r\n        />\r\n        <Button onClick={props.clearInputValue}>✖</Button>\r\n      </Form>\r\n    </Wrapper>\r\n   );\r\n}\r\n \r\nexport default Searcher;\r\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport styled from \"styled-components\";\nimport EventPlace from \"./components/EventPlace\";\nimport Footer from \"./components/Footer\";\nimport GifsLimitButton from \"./components/GifsLimitButton\";\nimport Header from \"./components/Header\";\nimport Searcher from \"./components/Searcher\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n  background: papayawhip;\n`;\n\nfunction App() {\n  const API = \"CCVpu71TxLgR0gsdR8aSRHoKyEWXjRNs\";\n\n  const [limit, setLimit] = useState(10);\n  const [url, setUrl] = useState(\n    `https://api.giphy.com/v1/gifs/search?q=&api_key=${API}&limit=${limit}`);\n  const [gifsData, setGifsData] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n\n  const searchInput = useRef(null)\n\n  const handleChangeInputValue = (event) => {\n    setUrl(\n      `https://api.giphy.com/v1/gifs/search?q=${event.target.value}&api_key=${API}&limit=${limit}`);\n    setInputText(event.target.value);\n  };\n\n  const handleClearInputValue = (event) => {\n    event.preventDefault();\n    setUrl(\n      `https://api.giphy.com/v1/gifs/search?q=&api_key=${API}&limit=${limit}`\n    );\n    setInputText(\"\");\n    searchInput.current.focus()\n  };\n\n  const handleChangeGifsLimit = () => {\n    setLimit(limit < 15 ? limit + 5 : 5)\n  }\n\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response;\n          }\n          throw Error(\"error\");\n        })\n        .then((response) => response.json())\n        .then((gifs) => {\n          setGifsData(gifs.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n\n    const searchTimer = setTimeout(() => {\n      fetchData();\n    }, 500);\n\n    return () => clearTimeout(searchTimer);\n  }, [url]);\n\n  return (\n    <Wrapper>\n      <Header />\n      <Searcher\n        changeInputValue={handleChangeInputValue}\n        clearInputValue={handleClearInputValue}\n        inputText={inputText}\n        searchInput={searchInput}\n      />\n      <EventPlace gifsData={gifsData} />\n      <Footer />\n      <GifsLimitButton limit={limit} handleChangeGifsLimit={handleChangeGifsLimit}/>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}